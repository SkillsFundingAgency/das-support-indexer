@using SFA.DAS.Support.Shared.SearchIndexModel
@model SFA.DAS.Support.Portal.Web.ViewModels.SearchResultsViewModel
@{
    Layout = "~/Views/Shared/_PortalLayout.cshtml";
    ViewBag.currentSection = "search";
    ViewBag.currentPage = "DAS Support-Search";
}


<section class="search no-search-term">
    <div class="grid-row">
        <div class="column-full">


            @using (Html.BeginForm("Index", "Search", FormMethod.Get, new {accept_charset = "utf-8", @class = "search-header search-header-2", role = "search"}))
            {
                <div class="searchfield form-group">
                    <fieldset class="search-input">
                        <h1 class="heading-large">Search</h1>
                        @Html.TextBoxFor(m => m.SearchTerm, string.Empty, new {id = "search-main", type = "search", @class = "form-control", placeholder = "Enter a name or email address", required = "required", maxlength = "100"})

                        <input type="hidden" name="Page" value="0"/>
                    </fieldset>

                    <fieldset class="search-submit">
                        <button type="submit" class="button">Search</button>
                    </fieldset>
                </div>

                <div class="form-group">
                    <fieldset class="inline">

                        <div class="multiple-choice">
                            @Html.RadioButtonFor(m => m.SearchType, SearchCategory.User, new {id = "UserSearchType", @checked = ""})
                            <label for="UserSearchType">Users</label>
                        </div>
                        <div class="multiple-choice">
                            @Html.RadioButtonFor(m => m.SearchType, SearchCategory.Account, new {id = "AccountSearchType"})
                            <label for="AccountSearchType">Accounts</label>
                        </div>

                    </fieldset>
                </div>
            }

        </div>
    </div>

    <div class="grid-row">
        <div class="column-full">

            @if (Model.AccountSearchResults != null && Model.SearchType == SearchCategory.Account)
            {
                <div class="grid-row">
                    <div class="column-two-thirds">
                        <h2 class="heading-medium heading-medium__no-top-margin">Results</h2>
                        <p> @Model.TotalAccountSearchItems accounts found</p>
                    </div>
                </div>


                if (Model.AccountSearchResults.Any())
                {
                    <div class="grid-row">
                        <div class="column-full">
                            <table class="responsive">
                                <thead>
                                <tr>
                                    <th scope="col">Account</th>
                                    <th scope="col">Account ID</th>
                                    <th scope="col"></th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var account in Model.AccountSearchResults)
                                {
                                    <tr>
                                        <td data-label="Account">
                                            @account.Account
                                        </td>
                                        <td data-label="Account ID">
                                            @account.AccountID
                                        </td>
                                        <td data-label="">
                                            @Html.ActionLink("view", "Index", "Resource", new {key = "account", id = account.AccountID}, null)
                                        </td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    @Pager()
                }
            }
            else if (Model.UserSearchResults != null && Model.SearchType == SearchCategory.User)
            {
                <div class="grid-row">
                    <div class="column-full">
                        <h2 class="heading-medium heading-medium__no-top-margin">Results</h2>
                        <p> @Model.TotalUserSearchItems users found</p>
                    </div>
                </div>

                if (Model.UserSearchResults.Any())
                {
                    <div class="grid-row">
                        <div class="column-full">
                            <table class="responsive">
                                <thead>
                                <tr>
                                    <th scope="col">Name</th>
                                    <th scope="col">Email</th>
                                    <th scope="col">Status</th>
                                    <th scope="col"></th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var user in Model.UserSearchResults)
                                {
                                    <tr>
                                        <td data-label="Name">
                                            @user.Name
                                        </td>
                                        <td data-label="Email">
                                            @user.Email
                                        </td>
                                        <td data-label="Status">
                                            @user.Status
                                        </td>
                                        <td data-label="">
                                            @Html.ActionLink("view", "Index", "Resource", new {key = "user", id = user.Id}, null)
                                        </td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    @Pager()
                }
            }
        </div>
    </div>
</section>


@helper Pager()
{
    <div class="grid-row">
        <div class="column-full">
            <div class="page-navigation">



                @if (Model.Page > 0)
                {
                    <a href="@Url.Action("Index", new {Model.SearchTerm, Page = Model.Page - 1, Model.SearchType})"
                       style="visibility: visible" class="page-navigation__btn prev">
                        <i class="arrow-button fa fa-angle-left"></i>
                        <span class="description">Previous <span class="hide-mob">page</span></span>
                        <span class="counter">@Model.Page of @Model.LastPage</span>
                    </a>
                }



                @if (Model.Page != Model.LastPage)
                {
                    <a href="@Url.Action("Index", new {Model.SearchTerm, Page = Model.Page + 1, Model.SearchType})"
                       style="visibility: visible" class="page-navigation__btn next">
                        <i class="arrow-button fa fa-angle-right"></i>
                        <span class="description">Next <span class="hide-mob">page</span></span>
                        <span class="counter">@Model.Page of @Model.LastPage</span>
                    </a>
                }

            </div>

        </div>
    </div>
}