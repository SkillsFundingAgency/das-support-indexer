@model SFA.DAS.Support.Portal.Web.ViewModels.SearchResultsViewModel
@{
    ViewBag.currentSection = "search";
    ViewBag.currentPage = "users";
}

<h1 class="heading-xlarge">Search for a user</h1>
@using (Html.BeginForm("Index", "Search", FormMethod.Get, new { accept_charset = "utf-8", @class = "search-field", role = "search" }))
{
    <div class="search-input">
        <label for="search-main">

        </label>
        @Html.TextBoxFor(m => m.SearchTerm, string.Empty, new { id = "search-main", type = "search", @class = "form-control", placeholder = "Enter a name or email address", required = "required", maxlength = "100" })
        <input type="hidden" name="Page" value="1" />
        <div class="search-submit">
            <button type="submit" class="">Search</button>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(Model.SearchTerm))
{
    <p>@Html.ActionLink("Clear search", "Index")</p>
}

@if (!Model.Results.Any() && Model.Page > 1)
{
    <p>There are no more results.</p>
}
else if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <p>@Model.ErrorMessage</p>
}
else if (Model.Results != null && Model.Results.Any())
{
    <table>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Email</th>
            <th scope="col">Accounts</th>
            <th scope="col">Status</th>
        </tr>
        @foreach (var item in Model.Results)
        {
            <tr>
                <td>
                    @Html.ActionLink($"{item.FirstName} {item.LastName}", "Detail", new { id = item.Id, searchTerm = Model.SearchTerm })
                </td>
                <td>
                    @item.Email
                </td>
                <td>
                    @if (item.Accounts != null && item.Accounts.Any())
                    {
                        <ul class="list">
                            @foreach (var account in item.Accounts)
                            {
                                <li>
                                    @Html.ActionLink(account.DasAccountName, "Index", "Account", new { id = account.HashedAccountId }, null)
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <span>NA</span>
                    }
                </td>
                <td>
                    @item.Status
                </td>
            </tr>
        }
    </table>

    <div class="pagination">

        @if (Model.Page > 1)
        {
            @Html.ActionLink("< Prev", "Index", new { Model.SearchTerm, Page = Model.Page - 1 }, new { @class = "previous" })
            ;
        }

        @if (Model.Results.Any() && Model.Page != Model.LastPage)
        {
            @Html.ActionLink("Next >", "Index", new { Model.SearchTerm, Page = Model.Page + 1 }, new { @class = "next" })
            ;
        }

        @if (Model.Page != 1 && Model.LastPage != 1)
        {
            <span>Page @Model.Page of @Model.LastPage</span>
        }

    </div>
}
else if (Model.CustomSearchResult != null)
{

    <table>
        @foreach (var column in Model.CustomSearchResult.Columns)
        {

            <tr>
                <th scope="col">column</th>
            </tr>
        }
        @foreach (var row in Model.CustomSearchResult.Rows)
        {
            <tr>
                @foreach (var cell in row.CellValues)
                {

                    <td>
                        @cell.Value
                    </td>
                }
            </tr>
        }
    </table>

}
else if (!Model.Results.Any() && !string.IsNullOrEmpty(Model.SearchTerm))
{
    <p>No user found</p>
}
