@using HMRC.ESFA.Levy.Api.Types
@using SFA.DAS.Support.Portal.ApplicationServices.Responses
@using SFA.DAS.Support.Portal.Web.Helpers
@model SFA.DAS.Support.Portal.Web.ViewModels.PayeSchemeLevySubmissionViewModel
@{
    ViewBag.modelTitle = Model.Account?.DasAccountName;
    ViewBag.accountId = Model.Account?.HashedAccountId;
    ViewBag.dateRegistered = Model.Account.DateRegistered;
    ViewBag.currentSection = "account";
    ViewBag.currentPage = NavPages.PayeSchemeDetails;
    ViewBag.payeSchemes = Model.Account?.PayeSchemes;
    ViewBag.payePosition = Model.PayePosition;

    var selectedScheme = Model.Account.PayeSchemes?.ToList()[int.Parse(Model.PayePosition ?? "0")];

    var addedDate = selectedScheme == null || selectedScheme.AddedDate == DateTime.MinValue ? string.Empty :
        AccountHelper.ConvertDateTimeToDdmmyyyyFormat(selectedScheme.AddedDate);

    var reference = selectedScheme?.Ref;
    var name = selectedScheme?.Name;
}

<h1 class="heading-xlarge">@reference Levy declarations</h1>
<h4 class="paye-scheme-name">@name</h4>
@if (!string.IsNullOrEmpty(addedDate))
{
    <div class="paye-scheme-added-date">PAYE scheme added @addedDate</div>
}
<br/>
@if (Model.Status == AccountLevySubmissionsResponseCodes.Success)
{
    if (Model.LevyDeclarations != null && Model.LevyDeclarations.Any())
    {
        <table id="submission-details">
            <tr>
                <th scope="col">Submission date</th>
                <th scope="col">Payroll date</th>
                <th scope="col">Id</th>
                <th scope="col">Description</th>
                <th scope="col">Levy YTD</th>
            </tr>

            @foreach (var levySubmission in Model.LevyDeclarations)
            {
                var declarationEmphasis = "unprocessed-submission";

                if (levySubmission.LevyDeclarationSubmissionStatus == LevyDeclarationSubmissionStatus.LateSubmission)
                {
                    declarationEmphasis = "late";
                }
                if (levySubmission.LevyDeclarationSubmissionStatus == LevyDeclarationSubmissionStatus.LatestSubmission)
                {
                    declarationEmphasis = "strong";
                }

                <tr >
                    <td class="@declarationEmphasis">
                        @AccountHelper.GetSubmissionDate(levySubmission.SubmissionTime)
                    </td>
                    <td class="@declarationEmphasis">
                        @AccountHelper.GetPayrollDate(levySubmission.PayrollPeriod)
                    </td>
                    <td class="@declarationEmphasis">
                        @levySubmission.Id
                    </td>
                    <td aria-activedescendant class="@declarationEmphasis">
                        @AccountHelper.GetLevyDeclarationDescription(levySubmission)
                    </td>
                    <td class="@declarationEmphasis">
                        @AccountHelper.GetYearToDateAmount(levySubmission)
                    </td>
                </tr>
            }
        </table>
    }
    else
    {
        <p id="no-declarations-found">No declarations found for this PAYE scheme</p>
    }
}
else if (Model.Status == AccountLevySubmissionsResponseCodes.AccountNotFound)
{
    <p id="no-account-found">Couldn't find the account</p>
}
else if (Model.Status == AccountLevySubmissionsResponseCodes.DeclarationsNotFound)
{
    <p id="status-no-declarations-found">No declarations found for this PAYE scheme</p>
}